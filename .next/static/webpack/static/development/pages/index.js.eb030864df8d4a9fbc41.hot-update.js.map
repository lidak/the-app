{"version":3,"file":"static/webpack/static/development/pages/index.js.eb030864df8d4a9fbc41.hot-update.js","sources":["webpack:///./components/Auth.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Message from './Message';\n\nexport default class Auth extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      password: '',\n      messageType: '',\n      messageText: '',\n      userId: null\n    }\n  }\n\n  onNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  onPasswordChange = (e) => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  submitForm = (isRegister) => {\n    const {\n      name,\n      password\n    } = this.state;\n    const urlEnding = isRegister ? 'sign-up' : 'sign-in';\n    const successMessage = isRegister ? 'User created' : 'User Logged In';\n\n    (async () => {\n      const rawResponse = await fetch(`${location.origin}/users/${urlEnding}`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({name, password})\n      });\n      const content = await rawResponse.json();\n\n      if(content.error) {\n        this.setState({\n          messageType: 'error',\n          messageText: content.error\n        })\n      } else {\n        this.setState({\n          messageType: 'info',\n          messageText: successMessage\n        })\n      }\n    })();\n  }\n\n  render() {\n    const {\n      name,\n      password,\n      messageType,\n      messageText\n    } = this.state;\n\n    return (\n      <form>\n        <input type=\"text\" value={name} onChange={this.onNameChange} name=\"name\"/>\n        <input type=\"password\" value={password} onChange={this.onPasswordChange} name=\"password\"/>\n        <input type=\"button\" value=\"Sign Up\" onClick={this.submitForm.bind(this, true)}/>\n        <input type=\"button\" value=\"Sign In\" onClick={this.submitForm.bind(this, false)}/>\n        <Message type={messageType} message={messageText}/>\n      </form>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AADA;AAGA;AACA;AAhBA;AAkBA;AACA;AADA;AAGA;AACA;AAtBA;AAuBA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AANA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AArDA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AA8CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;AA1EA;AACA;;;;;A","sourceRoot":""}