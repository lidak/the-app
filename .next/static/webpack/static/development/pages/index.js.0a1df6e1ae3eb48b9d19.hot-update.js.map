{"version":3,"file":"static/webpack/static/development/pages/index.js.0a1df6e1ae3eb48b9d19.hot-update.js","sources":["webpack:///./components/AuthForm/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setUser } from '../../actions/actionCreators';\nimport Message from '../Message';\nimport { Button } from 'react-materialize';\n\nclass AuthForm extends Component {\n  constructor () {\n    super();\n    this.state = {\n      name: '',\n      password: '',\n      messageType: '',\n      messageText: '',\n      userId: null\n    };\n  }\n\n  onNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onPasswordChange = (e) => {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  submitForm = (isRegister) => {\n    debugger\n    const {\n      name,\n      password\n    } = this.state;\n    const urlEnding = isRegister ? 'sign-up' : 'sign-in';\n    const successMessage = isRegister ? 'User created' : 'User Logged In';\n    const { setUser } = this.props;\n\n    (async () => {\n      const rawResponse = await fetch(`${window.location.origin}/users/${urlEnding}`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          password\n        })\n      });\n      const content = await rawResponse.json();\n\n      if (content.error) {\n        this.setState({\n          messageType: 'error',\n          messageText: content.error\n        });\n      } else {\n        this.setState({\n          messageType: 'info',\n          messageText: successMessage\n        });\n\n        setUser({ name, password });\n      }\n    })();\n  }\n\n  render () {\n    const {\n      name,\n      password,\n      messageType,\n      messageText\n    } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"input-field col s12 m6\">\n          <input\n            type=\"text\"\n            value={name}\n            onChange={this.onNameChange}\n            id=\"name\"\n            className=\"validate\"\n          />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n        <div className=\"input-field col s12 m6\">\n          <input\n            type=\"password\"\n            value={password}\n            onChange={this.onPasswordChange}\n            id=\"password\"\n            className=\"validate\"\n          />\n          <label htmlFor=\"password\">\n            Password\n          </label>\n        </div>\n        <Button\n          waves=\"light\"\n          className=\"col s12 m2 offset-m7\"\n          onClick={this.submitForm.bind(this, true)}\n        >\n          Register\n        </Button>\n        <Button\n          className=\"col s12 m2 offset-m1\"\n          onClick={this.submitForm.bind(this, false)}\n        >\n          Log In\n        </Button>\n        <Message type={messageType} message={messageText}/>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    setUser: (user) => dispatch(setUser(user))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AuthForm);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AADA;AAGA;AACA;AAhBA;AAkBA;AACA;AADA;AAGA;AACA;AAtBA;AAwBA;AADA;AAAA;AAAA;AAMA;AACA;AAPA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AA5DA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAKA;AACA;AACA;AAHA;AAQA;AACA;AAFA;AAMA;AAAA;AAAA;AAGA;;;;AAhHA;AACA;AAkHA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}